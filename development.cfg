# A buildout suited for development environements. Installs a single Zope
# instance and development tools.
[settings]
zope-user = admin:admin
compile-mo-files-in-zope = true
checkout-branch = main

[buildout]
extends = base.cfg

eggs +=
# debugging tools
    Paste
    plone.app.debugtoolbar
    Products.DocFinderTab
    plone.reload
    ipdb
    Products.PDBDebugMode
    Products.PrintingMailHost
    collective.profiler
    Products.enablesettrace
    ftw.builder
    ftw.testbrowser

parts =
    checkinterval
    instance
    zopepy
    ipzope
    omelette
    test
    robot
    i18ndude
    repozo
    backup
    pyccleaner
    precompiler
    mrbob
    
deprecation-warnings = on
verbose-security = on


[instance]
<= instance_base
recipe = plone.recipe.zope2instance
http-address = 8070
python-check-interval = ${checkinterval:value}
environment-vars =
    ${buildout:environment-vars}
    ENABLE_PRINTING_MAILHOST True
zope-conf-additional =

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[test]
recipe = collective.xmltestreport
eggs = ${buildout:eggs}
defaults = ['--auto-color', '--auto-progress', '--ignore_dir=.git', '--ignore_dir=bower_components', '--ignore_dir=node_modules']
initialization =
# Ensures that tests using datetime will work locally on machines using TZ = GMT
    os.environ['TZ'] = 'CEST'
    import time
    try:
        time.tzset()
    except AttributeError:
        # function not available on Windows
        pass

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.plone
    bobtemplates.gillux

[ipzope]
# a IPython Shell for interactive use with zope running.
recipe = zc.recipe.egg
eggs =
        ipython
        ${instance:eggs}
initialization =
        import sys, os
        os.environ["SOFTWARE_HOME"] = " "
        os.environ["INSTANCE_HOME"] = "${instance:location}"
        os.environ["CONFIG_FILE"] = "${instance:location}/etc/zope.conf"
        os.environ["IPYTHONDIR"] = os.path.join("${buildout:directory}", "${buildout:sources-dir}", "slc.ipythonprofiles")
        sys.argv[1:1] = "--profile=zope".split()
scripts = ipython=ipzope
extra-paths =
    ${buildout:sources-dir}/slc.ipythonprofiles/profile_zope
